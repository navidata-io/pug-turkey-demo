# yaml-language-server: $schema=schema.json
inherits: workflow-template.yaml

meta:
  version: 1.0.0
  description: PUG Turkey Demo Project
  authors: mthierba

credentials: # how to authenticate
  fabric:
    OIDC:
      tenantId: 'pbitools.org'
      servicePrincipalId: 97d58016-9953-4817-8803-632ffebf7771

variables:
  WORKSPACE_BASE_NAME:
    value: 'demo-pug-turkey'
  WORKSPACE_SUFFIX:
    value: ''
    description: The suffix to append to the workspace name, e.g. '/test' or '/dev'
    environments:
      test: '/test'
      dev: '/dev'
      pr: '/pr/{{CI.PULL_REQUEST_NUMBER}}'
      feature: '{{GIT.BRANCH_NAME}}'
  WORKSPACE_NAME:
    value: '{{WORKSPACE_BASE_NAME}}{{WORKSPACE_SUFFIX}}'
    description: The name of the target workspace for each environment

targets: # where to deploy (Azure, Fabric)
  fabric:workspace:
    .default: # key. '.default' is the default target for all Fabric items
      name: '{{WORKSPACE_NAME}}'
      capacity: '2812A96A-EE6A-4E8D-B5F6-890A53DC727E'
      description: 'Created via DevOps CLI'
      allowCreate: true
      roleAssignments:
      - role: Member
        principalType: Group
        principalId: 383abc38-aafd-4361-b6f2-667a864b22da
      provisionIdentity: false

definitions:
  fabric:
    .default:
      rootFolder: /fabric

items:
  Lakehouse:
    fabric:lakehouse:
      ignore-default-semantic-model: true
  Pipeline:
    fabric:dataPipeline:
    parameters:
      LakehouseId: '#/Lakehouse/id'
      LogsFolderPath: '/logs/{{CONNECTION.TenantId}}/{{WORKSPACE_NAME}}/DataPipeline'
      FactFolderRelPath:
        value: 'incremental/fact_sale_1y_incremental'
        environments:
          prod: 'full/fact_sale'
          test: 'full/fact_sale'
  Notebook: # label
    fabric:notebook:
      defaultLakehouse: '#/Lakehouse/id'
      job:
        dependsOn: '#/Pipeline/job'
    parameters:
      wwiRootFolder: 'Files/WideWorldImportersDW'
      factSaleFolder:
        value: 'facts/fact_sale_1y_incremental'
        environments:
          prod: 'facts/fact_sale'
          test: 'facts/fact_sale'
      environment: '{{ENVIRONMENT}}'
      version: '{{VERSION}}'
      pipeline: '{{PIPELINE.Name}}'
  SemanticModel:
    fabric:semanticModel:
      databaseQuery: '#/Lakehouse'
      refresh:
        when: WorkspaceCreated
        depends-on: '#/Notebook/job'
        type: Automatic
  Report:
    fabric:report:
      semanticModel: '#/SemanticModel'
